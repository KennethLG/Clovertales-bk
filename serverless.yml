service: cloverstory-bk
frameworkVersion: "3"
useDotenv: true

custom:
  serverless-offline:
    httpPort: ${env:PORT}

provider:
  name: aws
  runtime: nodejs14.x
  region: "us-east-1"
  logs:
    httpApi:
      format: 'requestId: $context.requestId, ip: $context.identity.sourceIp, caller: $context.identity.caller, user: $context.identity.user, requestTime: $context.requestTime, status: $context.status, protocol: $context.protocol, method: $context.httpMethod, resourcePath: $context.resourcePath, responseLength: $context.responseLength'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [MembersTable, Arn]
        - Fn::GetAtt: [PlatformsTable, Arn]
        - Fn::GetAtt: [PostsTable, Arn]
        - Fn::GetAtt: [GalleryTable, Arn]
        - Fn::GetAtt: [UsersTable, Arn]

  environment:
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    AWS_API_GATEWAY_ID: ${env:AWS_API_GATEWAY_ID}
    AWS_CDN: ${env:AWS_CDN}
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
    PORT: ${env:PORT}
    MAILER_HOST: ${env:MAILER_HOST}
    MAILER_PORT: ${env:MAILER_PORT}
    MAILER_USER: ${env:MAILER_USER}
    MAILER_PASS: ${env:MAILER_PASS}
    SECRET_KEY: ${env:SECRET_KEY}
    SECRET_PASS: ${env:SECRET_PASS}
  httpApi:
    cors: true
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizerFunc

functions:
  login:
    handler: src/presentation/functions/auth/login.handler
    events:
      - httpApi:
          path: /login
          method: post
  getMembers:
    handler: src/presentation/functions/member/getMembers.handler
    events:
      - httpApi:
          path: /members
          method: get
  getPlatforms:
    handler: src/presentation/functions/platform/getPlatforms.handler
    events:
      - httpApi:
          path: /platforms
          method: get
  sendMail:
    handler: src/presentation/functions/mail/sendMail.handler
    events:
      - httpApi:
          path: /sendMail
          method: post
  getPost:
    handler: src/presentation/functions/post/getPost.handler
    events:
      - httpApi:
          path: /post
          method: get
  getGallery:
    handler: src/presentation/functions/gallery/getGallery.handler
    events:
      - httpApi:
          path: /gallery
          method: get
  createPost:
    handler: src/presentation/functions/post/createPost.handler
    events:
      - httpApi:
          path: /post
          method: post
          authorizer:
            name: customAuthorizer
  deletePost:
    handler: src/presentation/functions/post/deletePost.handler
    events:
      - httpApi:
          path: /post
          method: delete
          authorizer:
            name: customAuthorizer
  updatePost:
    handler: src/presentation/functions/post/updatePost.handler
    events:
      - httpApi:
          path: /post
          method: put
          authorizer:
            name: customAuthorizer
  createGallery:
    handler: src/presentation/functions/gallery/createGallery.handler
    events:
      - httpApi:
          path: /gallery
          method: post
          authorizer:
            name: customAuthorizer
  deleteGallery:
    handler: src/presentation/functions/gallery/deleteGallery.handler
    events:
      - httpApi:
          path: /gallery
          method: delete
          authorizer:
            name: customAuthorizer
  createUser:
    handler: src/presentation/functions/user/createUser.handler
    events:
      - httpApi:
          path: /user
          method: post
  authorizerFunc:
    handler: src/presentation/functions/auth/customAuthorizer.handler
resources:
  Resources:
    MembersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MembersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    PlatformsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PlatformsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PostsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    GalleryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: GalleryTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

plugins:
  - serverless-esbuild
  - serverless-offline
