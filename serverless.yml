service: cloverstory-bk
frameworkVersion: "3"
useDotenv: true

custom:
  serverless-offline:
    httpPort: ${env:PORT}

provider:
  name: aws
  runtime: nodejs14.x
  region: "us-east-1"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [MembersTable, Arn]
        - Fn::GetAtt: [PlatformsTable, Arn]
        - Fn::GetAtt: [PostsTable, Arn]
  environment:
    AWS_DYNAMODB_ARN: ${env:AWS_DYNAMODB_ARN}
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    PORT: ${env:PORT}
    MAILER_HOST: ${env:MAILER_HOST}
    MAILER_PORT: ${env:MAILER_PORT}
    MAILER_USER: ${env:MAILER_USER}
    MAILER_PASS: ${env:MAILER_PASS}
  httpApi:
    cors: true

functions:
  getMembers:
    handler: src/presentation/functions/member/getMembers.handler
    events:
      - httpApi:
          path: /members
          method: get
  getPlatforms:
    handler: src/presentation/functions/platform/getPlatforms.handler
    events:
      - httpApi:
          path: /platforms
          method: get
  sendMail:
    handler: src/presentation/functions/mail/sendMail.handler
    events:
      - httpApi:
          path: /sendMail
          method: post
  createPost:
    handler: src/presentation/functions/post/createPost.handler
    events:
      - httpApi:
          path: /post
          method: post
  getPost:
    handler: src/presentation/functions/post/getPost.handler
    events:
      - httpApi:
          path: /post
          method: get
  deletePost:
    handler: src/presentation/functions/post/deletePost.handler
    events:
      - httpApi:
          path: /post
          method: delete
  updatePost:
    handler: src/presentation/functions/post/updatePost.handler
    events:
      - httpApi:
          path: /post
          method: put
  createGallery:
    handler : src/presentation/functions/gallery/createGallery.handler
    events:
      - httpApi:
          path: /gallery
          method: post
resources:
  Resources:
    MembersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MembersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    PlatformsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PlatformsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PostsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    GalleryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: GalleryTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

plugins:
  - serverless-esbuild
  - serverless-offline
